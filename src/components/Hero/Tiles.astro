---

---

<div
  id="grid-wrapper"
  class="grid w-full h-full absolute p-1"
  style="display: grid; grid-template-columns: repeat(var(--columns), minmax(0, 1fr));"
>
  {/* Boxes will be generated by client-side JavaScript */}
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    if (typeof gsap === "undefined") {
      console.error("GSAP is not loaded!");
      return;
    }

    const gridWrapper = document.getElementById("grid-wrapper");
    if (!gridWrapper) {
      console.error("Grid wrapper element not found!");
      return;
    }

    var allBoxes = [];
    let isGridFaded = false;

    const createGrid = () => {
      gridWrapper.innerHTML = "";

      const size = document.body.clientWidth > 800 ? 100 : 75;

      let columns = Math.floor(document.body.clientWidth / size);
      let rows = Math.floor(document.body.clientHeight / size);

      gridWrapper.style.setProperty("--columns", columns);
      gridWrapper.style.setProperty("--rows", rows);

      const ROWS = rows;
      const COLS = columns;

      allBoxes = [];

      for (let r = 0; r < ROWS; r++) {
        for (let c = 0; c < COLS; c++) {
          const box = document.createElement("div");
          box.classList.add(
            "box",
            "relative",
            "before:content-['']",
            "before:absolute",
            "before:inset-0.5",
            "before:bg-gray-950",
            "before:transition-opacity",
            "hover:before:opacity-70",
            "cursor-pointer",
            "before:rounded-sm"
          );
          box.dataset.row = r;
          box.dataset.col = c;

          gridWrapper.appendChild(box);
          allBoxes.push(box);
        }
      }
    };

    createGrid();

    window.onresize = () => createGrid();

    gridWrapper.addEventListener("click", (event) => {
      const clickedBox = event.target.closest(".box");
      if (!clickedBox) return;
      const clickedRow = parseInt(clickedBox.dataset.row);
      const clickedCol = parseInt(clickedBox.dataset.col);

      const targetOpacity = isGridFaded ? 1 : 0;

      gsap.to(allBoxes, {
        opacity: targetOpacity,
        duration: 0.4,
        ease: "power2.inOut",
        stagger: (index, targetElement) => {
          const targetRow = parseInt(targetElement.dataset.row);
          const targetCol = parseInt(targetElement.dataset.col);
          const distance =
            Math.abs(targetRow - clickedRow) + Math.abs(targetCol - clickedCol);
          return distance * 0.03;
        },
      });

      isGridFaded = !isGridFaded;
    });
  });
</script>

<style>
  .box:before {
    will-change: opacity;
  }
</style>
